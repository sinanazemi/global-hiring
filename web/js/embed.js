String.prototype.contains = function(str) { return this.search(str) != -1; }; function f_cbload(v_isSSL, v_subdomain, v_appKey, v_isDotNet) { var Base64 = { _keyStr: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", encode: function(e) { var t = ""; var n, r, i, s, o, u, a; var f = 0; e = Base64._utf8_encode(e); while(f < e.length) { n = e.charCodeAt(f++); r = e.charCodeAt(f++); i = e.charCodeAt(f++); s = n >> 2; o = (n & 3) << 4 | r >> 4; u = (r & 15) << 2 | i >> 6; a = i & 63; if(isNaN(r)) { u = a = 64; } else if(isNaN(i)) { a = 64; } t = t + this._keyStr.charAt(s) + this._keyStr.charAt(o) + this._keyStr.charAt(u) + this._keyStr.charAt(a); } return t; }, _utf8_encode: function(e) { e = e.replace(/\r\n/g, "\n"); var t = ""; for(var n = 0; n < e.length; n++) { var r = e.charCodeAt(n); if(r < 128) { t += String.fromCharCode(r); } else if(r > 127 && r < 2048) { t += String.fromCharCode(r >> 6 | 192); t += String.fromCharCode(r & 63 | 128); } else { t += String.fromCharCode(r >> 12 | 224); t += String.fromCharCode(r >> 6 & 63 | 128); t += String.fromCharCode(r & 63 | 128); } } return t; } }; v_isDotNet = v_isDotNet ? '&dotnet=true' : ''; document.write('\n<style type="text/css">\n\x3c!--\n #cxkg {display:none; position:relative; }\n--\x3e\n</style>\n'); if((window.location.pathname + window.location.search).contains(/(DP[.]ASP[?]APPKEY[=])|(DP[.]ASP[?]APPSESSION[=])/i)) { document.write("<br/><strong>Error - Cannot display DataPage due to multiple embedded deployments.</strong></br>"); } else { var v_query = "cbqe=" + Base64.encode("AppKey=" + v_appKey + "&js=true" + v_isDotNet + "&pathname=" + window.location.protocol + "//" + window.location.host + window.location.pathname + "&" + window.location.search.substring(1)) + "&cbEmbedTimeStamp=" + new Date().valueOf(); document.write("<scri" + 'pt type="text/javascript" src="ht' + 'tp' + (v_isSSL ? 's' : '') + "://" + v_subdomain + "/dp.asp?" + v_query + '"></scr' + "ipt>"); } };